services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - rag-network

  # RAG Application
  rag-app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: rag-app
    ports:
      - "8501:8501"
    volumes:
      - ../data:/app/data
      - ../qdrant_storage:/app/qdrant_storage
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - COLLECTION_NAME=documents
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - CHUNK_SIZE=1000
      - CHUNK_OVERLAP=200
    depends_on:
      - qdrant
    networks:
      - rag-network
    restart: unless-stopped

  # Optional: FastAPI server (if you have one)
  # api-server:
  #   build: .
  #   container_name: api-server
  #   ports:
  #     - "8000:8000"
  #   command: ["uvicorn", "api_server:app", "--host", "0.0.0.0", "--port", "8000"]
  #   environment:
  #     - QDRANT_HOST=qdrant
  #     - QDRANT_PORT=6333
  #     - COLLECTION_NAME=documents
  #   depends_on:
  #     qdrant:
  #       condition: service_healthy
  #   networks:
  #     - rag-network

volumes:
  qdrant_storage:
    driver: local

networks:
  rag-network:
    driver: bridge 